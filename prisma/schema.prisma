// schema.prisma

generator client {
    provider = "prisma-client-js"
}

// datasource db {
//     provider     = "mysql"
//     url          = env("DATABASE_URL")
//     relationMode = "prisma" // uses connection pooling
// }

datasource db {
    provider     = "postgresql"
    url          = env("DATABASE_URL")
    relationMode = "prisma" // uses connection pooling
}

model Post {
    id         String     @id @default(cuid())
    title      String
    content    String?
    published  Boolean    @default(false)
    author     User?      @relation(fields: [authorId], references: [id])
    authorId   String?
    createdAt  DateTime   @default(now())
    updatedAt  DateTime   @updatedAt
    likes      Int        @default(0)
    categories Category[]
}

model Category {
    id    Int    @id @default(autoincrement())
    name  String
    posts Post[]
}

enum Role {
    USER
    ADMIN
}

model Profile {
    id     Int    @id @default(autoincrement())
    bio    String
    user   User   @relation(fields: [userId], references: [id])
    userId String @unique
}

model User {
    id        String   @id @default(cuid())
    name      String?
    email     String?  @unique
    createdAt DateTime @default(now()) @map(name: "created_at")
    updatedAt DateTime @updatedAt @map(name: "updated_at")
    posts     Post[]
    role      Role     @default(USER)
    profile   Profile?

    @@map(name: "users")
}

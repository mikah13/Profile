{
  "version": 3,
  "sources": ["../../../contentlayer.config.js"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from \"contentlayer/source-files\"\r\nimport rehypeAutolinkHeadings from \"rehype-autolink-headings\"\r\nimport rehypePrettyCode from \"rehype-pretty-code\"\r\nimport rehypeSlug from \"rehype-slug\"\r\nimport remarkGfm from \"remark-gfm\"\r\n\r\n/** @type {import('contentlayer/source-files').ComputedFields} */\r\nconst computedFields = {\r\n    slug: {\r\n        type: \"string\",\r\n        resolve: (doc) => `/${doc._raw.flattenedPath}`,\r\n    },\r\n    slugAsParams: {\r\n        type: \"string\",\r\n        resolve: (doc) => doc._raw.flattenedPath.split(\"/\").slice(1).join(\"/\"),\r\n    },\r\n}\r\nexport const Post = defineDocumentType(() => ({\r\n    name: \"Post\",\r\n    filePathPattern: `blog/**/*.mdx`,\r\n    contentType: \"mdx\",\r\n    fields: {\r\n        title: {\r\n            type: \"string\",\r\n            required: true,\r\n        },\r\n        description: {\r\n            type: \"string\",\r\n        },\r\n        date: {\r\n            type: \"date\",\r\n            required: true,\r\n        },\r\n        published: {\r\n            type: \"boolean\",\r\n            default: true,\r\n        },\r\n        image: {\r\n            type: \"string\",\r\n            required: true,\r\n        },\r\n        authors: {\r\n            // Reference types are not embedded.\r\n            // Until this is fixed, we can use a simple list.\r\n            // type: \"reference\",\r\n            // of: Author,\r\n            type: \"list\",\r\n            of: { type: \"string\" },\r\n            required: true,\r\n        },\r\n    },\r\n    computedFields,\r\n}))\r\n\r\n\r\nexport const Author = defineDocumentType(() => ({\r\n    name: \"Author\",\r\n    filePathPattern: `authors/**/*.mdx`,\r\n    contentType: \"mdx\",\r\n    fields: {\r\n        title: {\r\n            type: \"string\",\r\n            required: true,\r\n        },\r\n        description: {\r\n            type: \"string\",\r\n        },\r\n        avatar: {\r\n            type: \"string\",\r\n            required: true,\r\n        },\r\n        twitter: {\r\n            type: \"string\",\r\n            required: true,\r\n        },\r\n    },\r\n    computedFields,\r\n}))\r\n\r\nexport default makeSource({\r\n    contentDirPath: \"src/content\",\r\n    documentTypes: [Post, Author],\r\n    mdx: {\r\n        remarkPlugins: [remarkGfm],\r\n        rehypePlugins: [\r\n            rehypeSlug,\r\n            [\r\n                rehypePrettyCode,\r\n                {\r\n                    theme: \"material-theme-darker\",\r\n                    onVisitLine(node) {\r\n                        // Prevent lines from collapsing in `display: grid` mode, and allow empty\r\n                        // lines to be copy/pasted\r\n                        if (node.children.length === 0) {\r\n                            node.children = [{ type: \"text\", value: \" \" }]\r\n                        }\r\n                    },\r\n                    onVisitHighlightedLine(node) {\r\n                        node.properties.className.push(\"line--highlighted\")\r\n                    },\r\n                    onVisitHighlightedWord(node) {\r\n                        node.properties.className = [\"word--highlighted\"]\r\n                    },\r\n                },\r\n            ],\r\n            [\r\n                rehypeAutolinkHeadings,\r\n                {\r\n                    properties: {\r\n                        className: [\"subheading-anchor\"],\r\n                        ariaLabel: \"Link to section\",\r\n                    },\r\n                },\r\n            ],\r\n        ],\r\n    },\r\n})"],
  "mappings": ";AAAA,SAAS,oBAAoB,kBAAkB;AAC/C,OAAO,4BAA4B;AACnC,OAAO,sBAAsB;AAC7B,OAAO,gBAAgB;AACvB,OAAO,eAAe;AAGtB,IAAM,iBAAiB;AAAA,EACnB,MAAM;AAAA,IACF,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,IAAI,IAAI,KAAK,aAAa;AAAA,EAChD;AAAA,EACA,cAAc;AAAA,IACV,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,IAAI,KAAK,cAAc,MAAM,GAAG,EAAE,MAAM,CAAC,EAAE,KAAK,GAAG;AAAA,EACzE;AACJ;AACO,IAAM,OAAO,mBAAmB,OAAO;AAAA,EAC1C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACJ,OAAO;AAAA,MACH,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,aAAa;AAAA,MACT,MAAM;AAAA,IACV;AAAA,IACA,MAAM;AAAA,MACF,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,WAAW;AAAA,MACP,MAAM;AAAA,MACN,SAAS;AAAA,IACb;AAAA,IACA,OAAO;AAAA,MACH,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,MAKL,MAAM;AAAA,MACN,IAAI,EAAE,MAAM,SAAS;AAAA,MACrB,UAAU;AAAA,IACd;AAAA,EACJ;AAAA,EACA;AACJ,EAAE;AAGK,IAAM,SAAS,mBAAmB,OAAO;AAAA,EAC5C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACJ,OAAO;AAAA,MACH,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,aAAa;AAAA,MACT,MAAM;AAAA,IACV;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,SAAS;AAAA,MACL,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,EACJ;AAAA,EACA;AACJ,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACtB,gBAAgB;AAAA,EAChB,eAAe,CAAC,MAAM,MAAM;AAAA,EAC5B,KAAK;AAAA,IACD,eAAe,CAAC,SAAS;AAAA,IACzB,eAAe;AAAA,MACX;AAAA,MACA;AAAA,QACI;AAAA,QACA;AAAA,UACI,OAAO;AAAA,UACP,YAAY,MAAM;AAGd,gBAAI,KAAK,SAAS,WAAW,GAAG;AAC5B,mBAAK,WAAW,CAAC,EAAE,MAAM,QAAQ,OAAO,IAAI,CAAC;AAAA,YACjD;AAAA,UACJ;AAAA,UACA,uBAAuB,MAAM;AACzB,iBAAK,WAAW,UAAU,KAAK,mBAAmB;AAAA,UACtD;AAAA,UACA,uBAAuB,MAAM;AACzB,iBAAK,WAAW,YAAY,CAAC,mBAAmB;AAAA,UACpD;AAAA,QACJ;AAAA,MACJ;AAAA,MACA;AAAA,QACI;AAAA,QACA;AAAA,UACI,YAAY;AAAA,YACR,WAAW,CAAC,mBAAmB;AAAA,YAC/B,WAAW;AAAA,UACf;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AACJ,CAAC;",
  "names": []
}
